---
import "../styles/global.css";
import { getCollection } from "astro:content";
import { ViewTransitions } from "astro:transitions";
import { cn } from "@/lib/utils";
import SetTheme from "../components/set-theme.astro";
import Sidebar from "../components/sidebar.astro";
import type { TreeNode } from "@/lib/types";

const contents = await getCollection("obsidian");

const allIds = contents.map((item) => item.id.replace(".md", ""));

function buildTree(filePaths: string[]): TreeNode[] {
  const rootNodes: TreeNode[] = [];

  filePaths.forEach((filePath) => {
    const pathSegments = filePath.split("/");
    let currentNodes = rootNodes;
    let currentPath = "";

    pathSegments.forEach((segment, index) => {
      currentPath += `${segment}/`;

      let nextNode = currentNodes.find((node) => node.name === segment);

      if (!nextNode) {
        nextNode = { name: segment, path: currentPath };

        if (index === pathSegments.length - 1) {
          // Leaf node (file), no need for children array
          currentNodes.push(nextNode);
        } else {
          // Non-leaf node (directory), create children array
          nextNode.children = [];
          currentNodes.push(nextNode);
        }
      }

      currentNodes = nextNode.children || [];
    });
  });

  return rootNodes;
}

const tree = buildTree(allIds);

const { minutesRead } = Astro.props;
---

<html lang="en">
  <head>
    <SetTheme />
    <ViewTransitions />

    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
  </head>
  <body class="flex min-h-dvh overflow-x-clip overscroll-none">
    <Sidebar tree={tree} minutesRead={minutesRead} />
    <main class="transition-all p-5 flex-1 md:px-20 pb-36">
      <article
        class={cn(
          "mx-auto prose prose-everforest max-w-3xl",
          "prose-headings:text-xl md:prose-headings:text-2xl prose-headings:font-bold",
          "prose-h3:text-base md:prose-h3:text-xl",
          "prose-p:text-base md:prose-p:text-xl prose-p:!leading-[1.7]",
          "hover:prose-a:brightness-90",
          "prose-li:text-lg md:prose-li:text-xl prose-ol:ml-5",
          "prose-li:has-[input]:list-none",
          "prose-blockquote:font-normal prose-blockquote:not-italic",
          "mt-8 [&>:last-child]:mt-16",
          "prose-h2:mt-20 [&>h2:first-of-type]:mt-0",
          "prose-code:text-base md:prose-code:text-lg prose-pre:rounded-2xl",
        )}
      >
        <slot />
      </article>
    </main>
    <script>
      function createCopyButtons() {
        const codeFigure = document.querySelectorAll(
          "figure[data-rehype-pretty-code-figure]",
        );

        codeFigure.forEach((figure) => {
          figure.classList.add("group");
          const firstChild = figure.firstChild! as HTMLElement;
          const secondChild = firstChild?.nextSibling;

          const copyButton = document.createElement("button");
          copyButton.textContent = "Copy";
          copyButton.classList.add(
            "bg-background",
            "appearance-none",
            "text-base",
            "px-3",
            "py-1",
            "rounded-lg",
            "duration-200",
            "opacity-0",
            "group-hover:opacity-100",
            "hover:text-primary",
            "text-foreground",
            "absolute",
            "top-2",
            "right-2",
          );

          const rawCode =
            figure.querySelector("code")?.innerText ??
            "something went wrong, and i don't know what it is ðŸ˜‚";

          copyButton.addEventListener("click", () => {
            navigator.clipboard.writeText(rawCode);
            copyButton.textContent = "Copied!";

            setTimeout(() => {
              copyButton.textContent = "Copy";
            }, 2000);
          });

          firstChild.appendChild(copyButton);
          firstChild.classList.add("relative");
        });
      }

      createCopyButtons();

      document.addEventListener("astro:after-swap", () => {
        createCopyButtons();
      });
    </script>
  </body>
</html>
